'''This problem was asked by Snapchat.

Given a list of possibly overlapping intervals, return a new list of intervals where all overlapping intervals have been merged.

The input list is not necessarily ordered in any way.

For example, given [(1, 3), (5, 8), (4, 10), (20, 25)], you should return [(1, 3), (4, 10), (20, 25)].'''

arr=[]
for i in range(int(input())):
    arr.append(tuple(map(int,input().split())))

#arr=sorted(arr)
for i in arr:
    for j in arr:
        if(i!=j):
            if(j[0]>i[0] and j[1]>i[1] and j[0]>i[1]):
                pass
            elif(j[0]>i[0] and j[1]<i[1] and j[0]>i[1]):
                arr.remove(i)
                arr.remove(j)
                arr.append((i[0],j[1]))
                
            elif(i[0]<j[0] and i[1]>j[1]):
                arr.remove(j)
            elif(j[0]>i[0] and j[1]>i[1] and j[0]<i[1]):
                arr.remove(i)
                arr.remove(j)
                arr.append((i[0],j[1]))
print(arr)
