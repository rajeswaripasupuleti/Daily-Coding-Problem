/*

This problem was asked by Facebook.

Given an array of integers, write a function to determine whether the array could become non-decreasing by modifying at most 1 element.

For example, given the array [10, 5, 7], you should return true, since we can modify the 10 into a 1 to make the array non-decreasing.

Given the array [10, 5, 1], you should return false, since we can't modify any one element to get a non-decreasing array.

*/
import java.util.*;

public class Main
{
    Scanner s=new Scanner(System.in);
    int n=s.nextInt();
    int arr[]=new int[n];
    
    public void readData()
    {
        for(int i=0;i<n;i++)
        arr[i]=s.nextInt();
    }
    
    public boolean isNonDecreasing()
    {
        int c=0;
        for(int i=0;i<n-1;i++)
        {
            if(arr[i]>arr[i+1])
            c++;
        }
        if(c==1)
        return true;
        else
        return false;
    }
	public static void main(String[] args) {
		Main m=new Main();
		m.readData();
		System.out.println(m.isNonDecreasing());
	}
}
