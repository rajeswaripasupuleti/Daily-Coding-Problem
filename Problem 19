/*

A builder is looking to build a row of N houses that can be of K different colors. He has a goal of minimizing cost while ensuring that no two neighboring houses are of the same color.

Given an N by K matrix where the nth row and kth column represents the cost to build the nth house with kth color, return the minimum cost which achieves this goal.

*/
import java.util.*;

public class Main
{
    Scanner s=new Scanner(System.in);
    int n,k;
    public void minimumCost()
    {
        n=s.nextInt();
        k=s.nextInt();
        int arr[][]=new int[n][k];
        for(int i=0;i<n;i++) {
            for(int j=0;j<k;j++) {
                arr[i][j]=s.nextInt();
            }
        }
        int minCost=0,min=999999;
        for(int i=0;i<n;i++) {
            for(int j=0;j<k;j++) {
                if(arr[i][j]<min)
                min=arr[i][j];
            }
            minCost+=min;
            min=999999;
        }
        System.out.println(minCost);
    }
	public static void main(String[] args) {
	    Main m=new Main();
	    m.minimumCost();
	}
}
